project(Bloocoo)

cmake_minimum_required (VERSION 2.6)

################################################################################
# Define cmake modules path
################################################################################
FOREACH (path "cmake" "../../cmake")
    IF (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${path}")
        SET (CMAKE_MODULE_PATH  "${CMAKE_MODULE_PATH}" "${CMAKE_CURRENT_SOURCE_DIR}/${path}")
    ENDIF()
ENDFOREACH(path)

################################################################################
# THIRD PARTIES
################################################################################

# We don't want to install some GATB-CORE artifacts
#SET (GATB_CORE_EXCLUDE_TOOLS     1)
 SET (GATB_CORE_EXCLUDE_TESTS     1)
 SET (GATB_CORE_EXCLUDE_EXAMPLES  1)

# GATB CORE
include (GatbCore)

# DSK
LOOKUP_PATH ("dsk" "../dsk;thirdparty/dsk" ${PROJECT_SOURCE_DIR} DSK_PATH)
LIST (APPEND CPACK_SOURCE_INSTALLED_DIRECTORIES  "${DSK_PATH}" "thirdparty/dsk") 

################################################################################
# TOOL
################################################################################

# we get compilation definitions from the gatb-core part
add_definitions (${gatb-core-flags})

# we give the headers directories from : 
#       - from project source 
#       - from GATB-CORE source
#       - from dsk source 
include_directories (src  ${gatb-core-includes} ${DSK_PATH}/src )

# we define the files to be compiled
file (GLOB_RECURSE  ProjectFiles  src/*  ${DSK_PATH}/src/DSK.* )

# we define the artifact to be built: the project binary
add_executable        (${PROJECT_NAME}  ${ProjectFiles})

# we define which libraries to be linked with project binary
target_link_libraries (${PROJECT_NAME}  ${gatb-core-libraries})

#file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/scripts/metaBloocoo DESTINATION ${PROJECT_BINARY_DIR})
add_custom_command(
    TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ln -sf "${CMAKE_CURRENT_SOURCE_DIR}/scripts/metaBloocoo" "${PROJECT_BINARY_DIR}"
)

################################################################################
#  PACKAGING 
################################################################################

# We chose the kind of archive we want to generate
SET (CPACK_GENERATOR            "TGZ")
SET (CPACK_SOURCE_GENERATOR     "TGZ")

# We copy the project binary to the 'bin' directory
INSTALL (TARGETS ${PROJECT_NAME} DESTINATION bin)

# copy the metaBloocoo script too
INSTALL (FILES ${CMAKE_CURRENT_SOURCE_DIR}/scripts/metaBloocoo DESTINATION bin)

# For the source archive, we exclude some unwanted directories.
SET (CPACK_SOURCE_IGNORE_FILES  ${CPACK_SOURCE_IGNORE_FILES} "/build/" "/test/" "/sam_stats/"  ".gitignore$")

# To be done at the end. 
INCLUDE (Delivery)
